<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope,$scope) {
	/* widget controller */
	var c = this;
	
	//
	c.selectItem = function(idx) {
		var id = c.data.notes[idx].sys_id;
		console.log('Note ID: ' + id);
		$rootScope.noteID = id;
		//senden an Root
		$rootScope.$emit('selectNote', id);
	}
	
	//hören auf änderungen am body widget
	$rootScope.$on('editNote', function(event, data){
		c.server.get({
			action: 'getNote',
			noteID: $rootScope.noteID
		}).then(function(r){
			//r is object from server script
			c.data.title = r.data.note.title;
			c.data.note = r.data.note.note;
			c.data.noteID = r.data.note.sys_id;
		});
	});
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	//create an array to populate with notes
	data.notes = [];
	var noteGR = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID());
	noteGR.orderByDesc('sys_created_on');
	noteGR.query();
	
	if (input && input.noteID) {
		if(input.action == 'getNote'){
			if (noteGR.get(input.noteID)){
				data.note = {};
				$sp.getRecordValues(data.note, noteGR, "title, note, sys_id");
			}
		}
	}else{
		while (noteGR.next()) {
			var noteObj = {};
			//use service portal helper method to get some display values
			$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
			//get the first 20 characters of the description
			noteObj.note = noteGR.getValue('note').slice(0,20);
			//push the populated obj into the array
			data.notes.push(noteObj);
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-28 09:30:31</sys_created_on>
        <sys_id>3bc9faf34f613300e51100fe9310c799</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_3bc9faf34f613300e51100fe9310c799</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-28 13:32:38</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      ${Notes}
    </h3>
  </div>
  <div class="list-group">
    <a class="list-group-item" ng-click="c.selectItem($index)" ng-repeat="note in data.notes">
      <h4 class="list-group-item-heading">
        {{note.title}}
      </h4>
      <p class="list-group-item-text">
        {{note.note}}
      </p>
    </a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
